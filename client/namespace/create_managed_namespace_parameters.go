// Code generated by go-swagger; DO NOT EDIT.

package namespace

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/vshn/cdays-webui-poc/models"
)

// NewCreateManagedNamespaceParams creates a new CreateManagedNamespaceParams object
// with the default values initialized.
func NewCreateManagedNamespaceParams() *CreateManagedNamespaceParams {
	var ()
	return &CreateManagedNamespaceParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateManagedNamespaceParamsWithTimeout creates a new CreateManagedNamespaceParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateManagedNamespaceParamsWithTimeout(timeout time.Duration) *CreateManagedNamespaceParams {
	var ()
	return &CreateManagedNamespaceParams{

		timeout: timeout,
	}
}

// NewCreateManagedNamespaceParamsWithContext creates a new CreateManagedNamespaceParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateManagedNamespaceParamsWithContext(ctx context.Context) *CreateManagedNamespaceParams {
	var ()
	return &CreateManagedNamespaceParams{

		Context: ctx,
	}
}

// NewCreateManagedNamespaceParamsWithHTTPClient creates a new CreateManagedNamespaceParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateManagedNamespaceParamsWithHTTPClient(client *http.Client) *CreateManagedNamespaceParams {
	var ()
	return &CreateManagedNamespaceParams{
		HTTPClient: client,
	}
}

/*CreateManagedNamespaceParams contains all the parameters to send to the API endpoint
for the create managed namespace operation typically these are written to a http.Request
*/
type CreateManagedNamespaceParams struct {

	/*Body*/
	Body *models.Namespace
	/*Clustername*/
	Clustername string
	/*Customer*/
	Customer string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create managed namespace params
func (o *CreateManagedNamespaceParams) WithTimeout(timeout time.Duration) *CreateManagedNamespaceParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create managed namespace params
func (o *CreateManagedNamespaceParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create managed namespace params
func (o *CreateManagedNamespaceParams) WithContext(ctx context.Context) *CreateManagedNamespaceParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create managed namespace params
func (o *CreateManagedNamespaceParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create managed namespace params
func (o *CreateManagedNamespaceParams) WithHTTPClient(client *http.Client) *CreateManagedNamespaceParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create managed namespace params
func (o *CreateManagedNamespaceParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the create managed namespace params
func (o *CreateManagedNamespaceParams) WithBody(body *models.Namespace) *CreateManagedNamespaceParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the create managed namespace params
func (o *CreateManagedNamespaceParams) SetBody(body *models.Namespace) {
	o.Body = body
}

// WithClustername adds the clustername to the create managed namespace params
func (o *CreateManagedNamespaceParams) WithClustername(clustername string) *CreateManagedNamespaceParams {
	o.SetClustername(clustername)
	return o
}

// SetClustername adds the clustername to the create managed namespace params
func (o *CreateManagedNamespaceParams) SetClustername(clustername string) {
	o.Clustername = clustername
}

// WithCustomer adds the customer to the create managed namespace params
func (o *CreateManagedNamespaceParams) WithCustomer(customer string) *CreateManagedNamespaceParams {
	o.SetCustomer(customer)
	return o
}

// SetCustomer adds the customer to the create managed namespace params
func (o *CreateManagedNamespaceParams) SetCustomer(customer string) {
	o.Customer = customer
}

// WriteToRequest writes these params to a swagger request
func (o *CreateManagedNamespaceParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param clustername
	if err := r.SetPathParam("clustername", o.Clustername); err != nil {
		return err
	}

	// path param customer
	if err := r.SetPathParam("customer", o.Customer); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
